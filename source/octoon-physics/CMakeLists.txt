SET(LIB_NAME physics)
SET(LIB_OUTNAME octoon-${LIB_NAME})

PROJECT(${LIB_OUTNAME})

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_NAME})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/${LIB_OUTNAME})

INCLUDE_DIRECTORIES(${PHYSX_INCLUDE_DIR})

SET(SOURCE_LIST
    ${HEADER_PATH}/physics_system.h
    ${SOURCE_PATH}/physics_system.cpp
    ${HEADER_PATH}/physics_context.h
    ${SOURCE_PATH}/physics_context.cpp

    ${SOURCE_PATH}/physx/physx_context.h
    ${SOURCE_PATH}/physx/physx_context.cpp
)
SOURCE_GROUP("physics" FILES ${SOURCE_LIST})

IF(OCTOON_BUILD_SHARED_DLL)
    ADD_DEFINITIONS(-DOCTOON_BUILD_DLL_EXPORT)
    ADD_LIBRARY(${LIB_OUTNAME} SHARED ${SOURCE_LIST})
ELSE()
    ADD_DEFINITIONS(-DOCTOON_STATIC)
    ADD_LIBRARY(${LIB_OUTNAME} ${SOURCE_LIST})
ENDIF()


add_dependencies(${LIB_OUTNAME} physx)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE ${PHYSX_LIBRARY})

TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-runtime)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-io)

SET_TARGET_ATTRIBUTE(${LIB_OUTNAME} "core")