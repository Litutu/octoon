SET(LIB_NAME model)
SET(LIB_OUTNAME octoon-${LIB_NAME})

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_NAME})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/${LIB_OUTNAME})

SET(MODEL_LIST
	${HEADER_PATH}/combine_mesh.h
	${SOURCE_PATH}/combine_mesh.cpp
	${HEADER_PATH}/model.h
	${SOURCE_PATH}/model.cpp
	${HEADER_PATH}/model_loader.h
	${HEADER_PATH}/modtypes.h
	${HEADER_PATH}/mesh.h
	${SOURCE_PATH}/mesh.cpp
	${HEADER_PATH}/property.h
	${SOURCE_PATH}/property.cpp
)
SOURCE_GROUP(${LIB_NAME} FILES ${MODEL_LIST})

SET(LOADER_LIST
	${HEADER_PATH}/modall.h
	${SOURCE_PATH}/modall.cpp
	${HEADER_PATH}/pmx_loader.h
	${SOURCE_PATH}/pmx_loader.cpp
)
SOURCE_GROUP(${LIB_NAME}\\loader  FILES ${LOADER_LIST})

SET(CONTOUER_LIST
	${HEADER_PATH}/contour.h
	${SOURCE_PATH}/contour.cpp
	${HEADER_PATH}/contour_group.h
	${SOURCE_PATH}/contour_group.cpp
	${HEADER_PATH}/path.h
	${SOURCE_PATH}/path.cpp
	${HEADER_PATH}/path_edge.h
	${SOURCE_PATH}/path_edge.cpp
	${HEADER_PATH}/path_group.h
	${SOURCE_PATH}/path_group.cpp
)
SOURCE_GROUP(${LIB_NAME}\\contour  FILES ${CONTOUER_LIST})

SET(TEXT_LIST
	${HEADER_PATH}/text_file.h
	${SOURCE_PATH}/text_file.cpp
	${HEADER_PATH}/text_meshing.h
	${SOURCE_PATH}/text_meshing.cpp
	${HEADER_PATH}/text_system.h
	${SOURCE_PATH}/text_system.cpp
)
SOURCE_GROUP(${LIB_NAME}\\text  FILES ${TEXT_LIST})

SET(SKELETON_LIST
	${HEADER_PATH}/bone.h
	${SOURCE_PATH}/bone.cpp
	${HEADER_PATH}/ik.h
	${HEADER_PATH}/vertex_weight.h
)
SOURCE_GROUP(${LIB_NAME}\\skelecton  FILES ${SKELETON_LIST})

IF(OCTOON_BUILD_SHARED_DLL)
	ADD_DEFINITIONS(-DOCTOON_BUILD_DLL_EXPORT)
	ADD_LIBRARY(${LIB_OUTNAME} SHARED ${MODEL_LIST} ${LOADER_LIST} ${CONTOUER_LIST} ${TEXT_LIST} ${SKELETON_LIST})
ELSE()
	ADD_DEFINITIONS(-DOCTOON_STATIC)
	ADD_LIBRARY(${LIB_OUTNAME} ${MODEL_LIST} ${LOADER_LIST} ${CONTOUER_LIST} ${TEXT_LIST} ${SKELETON_LIST})
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE libiconv)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE freetype)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-io)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-math)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-runtime)

IF(OCTOON_BUILD_PLATFORM_APPLE)
    FIND_LIBRARY(OPENGL_FRAMEWORK OpenGL)
    TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE ${OPENGL_FRAMEWORK})
ELSEIF(OCTOON_BUILD_PLATFORM_WINDOWS)
    TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE glu32)
ELSEIF(OCTOON_BUILD_PLATFORM_LINUX)
	FIND_PACKAGE(OpenGL REQUIRED)
	TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE ${OPENGL_LIBRARIES})
ELSEIF(OCTOON_BUILD_PLATFORM_EMSCRIPTEN)
	TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE iGLU)
ENDIF()

TARGET_INCLUDE_DIRECTORIES(${LIB_OUTNAME} PRIVATE ${OCTOON_PATH_INCLUDE})
TARGET_INCLUDE_DIRECTORIES(${LIB_OUTNAME} PRIVATE ${OCTOON_PATH_DEPENDENCIES}/freetype-2.9/devel)
TARGET_INCLUDE_DIRECTORIES(${LIB_OUTNAME} PRIVATE ${OCTOON_PATH_DEPENDENCIES}/freetype-2.9/include)

SET_TARGET_ATTRIBUTE(${LIB_OUTNAME} "core")