SET(LIB_NAME image)
SET(LIB_OUTNAME octoon-${LIB_NAME})

PROJECT(${LIB_OUTNAME})

SET(HEADER_PATH ${OCTOON_PATH_HEADER}/${LIB_NAME})
SET(SOURCE_PATH ${OCTOON_PATH_SOURCE}/${LIB_OUTNAME})

SET(SOURCE_LIST
    ${HEADER_PATH}/lut.h
    ${HEADER_PATH}/image.h
    ${SOURCE_PATH}/image.cpp
    ${HEADER_PATH}/image_types.h
    ${HEADER_PATH}/image_loader.h
    ${HEADER_PATH}/image_format.h
    ${SOURCE_PATH}/image_format.cpp
    ${HEADER_PATH}/image_util.h
    ${SOURCE_PATH}/image_util.cpp
)
SOURCE_GROUP("image" FILES ${SOURCE_LIST})

SET(FORMAT_LIST
    ${SOURCE_PATH}/image_bmp.h
    ${SOURCE_PATH}/image_bmp.cpp
    ${SOURCE_PATH}/image_jpeg.h
    ${SOURCE_PATH}/image_jpeg.cpp
    ${SOURCE_PATH}/image_png.h
    ${SOURCE_PATH}/image_png.cpp
	${SOURCE_PATH}/image_tga.h
	${SOURCE_PATH}/image_tga.cpp
	${SOURCE_PATH}/image_dds.h
	${SOURCE_PATH}/image_dds.cpp
	${SOURCE_PATH}/image_hdr.h
	${SOURCE_PATH}/image_hdr.cpp
    ${SOURCE_PATH}/image_all.h
    ${SOURCE_PATH}/image_all.cpp
)
SOURCE_GROUP("image\\internal" FILES ${FORMAT_LIST})

IF(OCTOON_BUILD_SHARED_DLL)
    ADD_DEFINITIONS(-DOCTOON_BUILD_DLL_EXPORT)
    ADD_LIBRARY(${LIB_OUTNAME} SHARED ${SOURCE_LIST} ${FORMAT_LIST})
ELSE()
    ADD_DEFINITIONS(-DOCTOON_STATIC)
    ADD_LIBRARY(${LIB_OUTNAME} ${SOURCE_LIST} ${FORMAT_LIST})
ENDIF()

TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE zlib)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE libpng)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE libjpeg)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-io)
TARGET_LINK_LIBRARIES(${LIB_OUTNAME} PRIVATE octoon-runtime)

TARGET_INCLUDE_DIRECTORIES(${LIB_OUTNAME} PRIVATE ${OCTOON_PATH_INCLUDE})

SET_TARGET_ATTRIBUTE(${LIB_OUTNAME} "core")